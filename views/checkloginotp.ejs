<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Verify OTP</title>
  <style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
        background: linear-gradient(135deg, #6a11cb, #2575fc);
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
    }

    .container {
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 10px 20px rgba(0,0,0,0.15);
        max-width: 400px;
        width: 100%;
        text-align: center;
        overflow: hidden;
    }

    .header {
        background: linear-gradient(135deg, #6a11cb, #2575fc);
        color: #fff;
        padding: 20px;
    }

    .header h2 {
        font-size: 24px;
        margin-bottom: 5px;
    }

    .header p {
        font-size: 14px;
        opacity: 0.9;
    }

    .form-container {
        padding: 20px;
    }

    .instruction {
        color: #555;
        margin-bottom: 20px;
        font-size: 14px;
    }

    input[type="text"] {
        width: 100%;
        padding: 12px;
        font-size: 18px;
        margin-bottom: 15px;
        border: 1.5px solid #ddd;
        border-radius: 6px;
        transition: border 0.3s;
        text-align: center;
        letter-spacing: 3px;
    }

    input[type="text"]:focus {
        border-color: #6a11cb;
        outline: none;
    }

    button {
        width: 100%;
        padding: 12px;
        background: linear-gradient(135deg, #6a11cb, #2575fc);
        border: none;
        border-radius: 6px;
        color: #fff;
        font-size: 16px;
        cursor: pointer;
        transition: 0.3s;
    }

    button:hover {
        opacity: 0.9;
    }

    .resend {
        margin-top: 15px;
        font-size: 13px;
        color: #555;
    }

    .resend a {
        color: #6a11cb;
        font-weight: 600;
        text-decoration: none;
    }

    .resend a:hover {
        text-decoration: underline;
    }

    .countdown {
        color: #6a11cb;
        font-weight: 600;
        margin-top: 5px;
        font-size: 14px;
    }

    .footer {
        background: #f9f9f9;
        padding: 15px;
        font-size: 13px;
        border-top: 1px solid #eee;
    }

    .footer a {
        color: #6a11cb;
        text-decoration: none;
        font-weight: 600;
    }

    .footer a:hover {
        text-decoration: underline;
    }

    .error {
        background: #ffe5e5;
        color: #d9534f;
        padding: 10px;
        border-radius: 6px;
        margin-bottom: 15px;
        font-size: 14px;
        border: 1px solid #d9534f;
    }

    @media (max-width: 480px) {
        .header h2 { font-size: 22px; }
        input[type="text"] { font-size: 16px; padding: 10px; }
        button { font-size: 14px; padding: 10px; }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h2>OTP Verification</h2>
      <p>Enter the OTP sent to your email</p>
    </div>

    <div class="form-container">
      <!-- Error message (dynamic) -->
      <!-- <div class="error">❌ Invalid or expired OTP</div> -->

      <form action="/verify-login-otp" method="POST">
        <input type="text" name="otp" placeholder="Enter OTP" maxlength="6" required>
        <button type="submit">Verify & Login</button>
      </form>

      <div class="resend">
        Didn’t receive OTP? <a href="/login">Resend</a>
        <div class="countdown" id="countdown">00:30</div>
      </div>
    </div>
    <% if (typeof error !== "undefined") { %>
    <p style="color: red; margin-top: 10px;"><%= error %></p>
  <% } %>

    <div class="footer">
      Back to <a href="/login">Login</a>
    </div>
  </div>

  <script>
    // Countdown timer for Resend OTP
    let seconds = 30;
    const countdownEl = document.getElementById("countdown");

    const timer = setInterval(() => {
      seconds--;
      countdownEl.textContent = `00:${seconds < 10 ? "0" + seconds : seconds}`;
      if (seconds <= 0) {
        clearInterval(timer);
        countdownEl.textContent = "You can resend now!";
      }
    }, 1000);
  </script>
</body>
</html>
